label = c(n$near_site),
# title = paste("<p>", n$name,"</p>"),
font.size = 30)
edges <- data.frame(from = c(sr$from_id), to = c(sr$to_id),
value = c(sr$d_edge))
visNetwork(nodes, edges, width = "100%")%>%
visIgraphLayout() %>% #靜態
visOptions(highlightNearest = TRUE, selectedBy= "group",
nodesIdSelection = list(enabled = TRUE,  selected = s_name))
library('visNetwork')
library('igraph')
n<-read.csv("path_node.csv", header=T, as.is=T, sep=',', fileEncoding = 'utf-8')
sr<-read.csv("path_edge.csv", header=T, as.is=T, sep=',', fileEncoding = 'utf-8')
s_name <- n[1,1]
nodes <- data.frame(id = c(n$sid), group = c(n$level),
label = c(n$near_site),
# title = paste("<p>", n$name,"</p>"),
font.size = 30)
edges <- data.frame(from = c(sr$from_id), to = c(sr$to_id),
value = c(sr$d_edge))
visNetwork(nodes, edges, width = "100%")%>%
visIgraphLayout() %>% #靜態
visOptions(highlightNearest = TRUE, selectedBy= "group",
nodesIdSelection = list(enabled = TRUE,  selected = s_name))
View(n)
View(n)
library('visNetwork')
library('igraph')
n<-read.csv("path_node.csv", header=T, as.is=T, sep=',', fileEncoding = 'utf-8')
sr<-read.csv("path_edge.csv", header=T, as.is=T, sep=',', fileEncoding = 'utf-8')
s_name <- n[1,1]
nodes <- data.frame(id = c(n$sid), group = c(n$level),
# label = c(n$near_site),
# title = paste("<p>", n$name,"</p>"),
font.size = 30)
edges <- data.frame(from = c(sr$from_id), to = c(sr$to_id),
value = c(sr$d_edge))
visNetwork(nodes, edges, width = "100%")%>%
visIgraphLayout() %>% #靜態
visOptions(highlightNearest = TRUE, selectedBy= "group",
nodesIdSelection = list(enabled = TRUE,  selected = s_name))
library(RMySQL)
library('visNetwork')
library('igraph')
con <- dbConnect(MySQL(),
db = "test",
username = "root",
password = "sightseeing",
host = "140.136.155.116")
dbSendQuery(con,"SET NAMES big5")
#找到目標id
sname <- '象山自然步道'
id_sql <- paste("SELECT id FROM site_data WHERE name = '",sname,"'", sep="")
sid <- dbGetQuery(con, id_sql)
#找到好的(green)裡面degree最大的
b_sql <- paste("SELECT s.id, s.segment, s.color, s.site_id, sd.name, `degree.g.`
FROM segment_data s, segment_degree d, site_data sd
WHERE (s.id = d.id AND sd.id = d.site_id)
AND sd.id = '",sid,"'
AND s.color = 'green'", sep="")
good <- dbGetQuery(con, b_sql)
DegreeMax <- max(good$degree.g.)
# print(DegreeMax)
# 找到maxdegree的名稱
g <- paste0("SELECT d.id, segment, color, `degree.g.`
FROM segment_data s, segment_degree d
WHERE (s.id = d.id) AND s.color = 'green'
AND s.site_id = '",sid,"'
AND `degree.g.` = '",DegreeMax,"'",sep="")
gname <- dbGetQuery(con, g)
#print(gname)
#找到與maxdegree連接的點
gid = gname$id
# =============以上是為了找到gid(degree最高的點)=============
#被連到最多的圖亮吧
seg <- paste("SELECT s.id, s.segment, s.color, d.name
FROM segment_data s, site_data d
WHERE (d.id = s.site_id)
AND d.id = '",sid,"'
AND s.color='green'",sep="")
seg_relat <- paste("SELECT r.from_id, s1.segment, s1.color, r.to_id, s2.segment, s2.color, r.site_id, d.name
FROM site_data d, segment_relationship r, segment_data s1, segment_data s2
WHERE (d.id = r.site_id AND r.from_id = s1.id AND r.to_id = s2.id)
AND d.id = '",sid,"'
AND (s1.color = 'green' AND s2.color = 'green')",sep="")
segment <- dbGetQuery(con, seg)
relationship <- dbGetQuery(con, seg_relat)
x <- data.frame(segment)
y <- data.frame(relationship)
fsize <- good$degree.g.
nodes <- data.frame(id = c(x$id), label = c(x$segment), color = c(x$color),
# title = paste("<p>", x$segment,"</p>"),
font.size = 30, value = fsize)
edges <- data.frame(from = c(y$from_id), to = c(y$to_id))
visNetwork(nodes,edges, width = "100%",height = "1000px") %>%
visIgraphLayout() %>%
visOptions(highlightNearest = list(enabled = T, degree = 2, hover = T),
nodesIdSelection = list(enabled = TRUE, selected = gid))
# dbDisconnect(con)
on.exit(dbDisconnect(con))
# 測試db連接
lapply(dbListConnections(MySQL()), dbDisconnect)
library(RMySQL)
library('visNetwork')
library('igraph')
con <- dbConnect(MySQL(),
db = "homestead",
username = "root",
password = "sightseeing",
host = "140.136.155.116")
dbSendQuery(con,"SET NAMES big5")
#找到目標id
sname <- '象山自然步道'
id_sql <- paste("SELECT id FROM site_data WHERE name = '",sname,"'", sep="")
sid <- dbGetQuery(con, id_sql)
#找到好的(green)裡面degree最大的
b_sql <- paste("SELECT s.id, s.segment, s.color, s.site_id, sd.name, `degree.g.`
FROM segment_data s, segment_degree d, site_data sd
WHERE (s.id = d.id AND sd.id = d.site_id)
AND sd.id = '",sid,"'
AND s.color = 'green'", sep="")
good <- dbGetQuery(con, b_sql)
DegreeMax <- max(good$degree.g.)
# print(DegreeMax)
# 找到maxdegree的名稱
g <- paste0("SELECT d.id, segment, color, `degree.g.`
FROM segment_data s, segment_degree d
WHERE (s.id = d.id) AND s.color = 'green'
AND s.site_id = '",sid,"'
AND `degree.g.` = '",DegreeMax,"'",sep="")
gname <- dbGetQuery(con, g)
#print(gname)
#找到與maxdegree連接的點
gid = gname$id
# =============以上是為了找到gid(degree最高的點)=============
#被連到最多的圖亮吧
seg <- paste("SELECT s.id, s.segment, s.color, d.name
FROM segment_data s, site_data d
WHERE (d.id = s.site_id)
AND d.id = '",sid,"'
AND s.color='green'",sep="")
seg_relat <- paste("SELECT r.from_id, s1.segment, s1.color, r.to_id, s2.segment, s2.color, r.site_id, d.name
FROM site_data d, segment_relationship r, segment_data s1, segment_data s2
WHERE (d.id = r.site_id AND r.from_id = s1.id AND r.to_id = s2.id)
AND d.id = '",sid,"'
AND (s1.color = 'green' AND s2.color = 'green')",sep="")
segment <- dbGetQuery(con, seg)
relationship <- dbGetQuery(con, seg_relat)
x <- data.frame(segment)
y <- data.frame(relationship)
fsize <- good$degree.g.
nodes <- data.frame(id = c(x$id), label = c(x$segment), color = c(x$color),
# title = paste("<p>", x$segment,"</p>"),
font.size = 30, value = fsize)
edges <- data.frame(from = c(y$from_id), to = c(y$to_id))
visNetwork(nodes,edges, width = "100%",height = "1000px") %>%
visIgraphLayout() %>%
visOptions(highlightNearest = list(enabled = T, degree = 2, hover = T),
nodesIdSelection = list(enabled = TRUE, selected = gid))
# dbDisconnect(con)
on.exit(dbDisconnect(con))
# 測試db連接
lapply(dbListConnections(MySQL()), dbDisconnect)
library(RMySQL)
library('visNetwork')
library('igraph')
con <- dbConnect(MySQL(),
db = "homestead",
username = "root",
password = "sightseeing",
host = "140.136.155.116")
dbSendQuery(con,"SET NAMES big5")
#找到目標id
sname <- '象山自然步道'
id_sql <- paste("SELECT id FROM site_data WHERE name = '",sname,"'", sep="")
sid <- dbGetQuery(con, id_sql)
#找到好的(green)裡面degree最大的
b_sql <- paste("SELECT s.id, s.segment, s.color, s.site_id, sd.name, `degree.g.`
FROM segment_data s, segment_degree d, site_data sd
WHERE (s.id = d.id AND sd.id = d.site_id)
AND sd.id = '",sid,"'
AND s.color = 'green'", sep="")
good <- dbGetQuery(con, b_sql)
DegreeMax <- max(good$degree.g.)
# print(DegreeMax)
# 找到maxdegree的名稱
g <- paste0("SELECT d.id, segment, color, `degree.g.`
FROM segment_data s, segment_degree d
WHERE (s.id = d.id) AND s.color = 'green'
AND s.site_id = '",sid,"'
AND `degree.g.` = '",DegreeMax,"'",sep="")
gname <- dbGetQuery(con, g)
#print(gname)
#找到與maxdegree連接的點
gid = gname$id
# =============以上是為了找到gid(degree最高的點)=============
#被連到最多的圖亮吧
seg <- paste("SELECT s.id, s.segment, s.color, d.name
FROM segment_data s, site_data d
WHERE (d.id = s.site_id)
AND d.id = '",sid,"'
AND s.color='green'",sep="")
seg_relat <- paste("SELECT r.from_id, s1.segment, s1.color, r.to_id, s2.segment, s2.color, r.site_id, d.name
FROM site_data d, segment_relationship r, segment_data s1, segment_data s2
WHERE (d.id = r.site_id AND r.from_id = s1.id AND r.to_id = s2.id)
AND d.id = '",sid,"'
AND (s1.color = 'green' AND s2.color = 'green')",sep="")
segment <- dbGetQuery(con, seg)
relationship <- dbGetQuery(con, seg_relat)
x <- data.frame(segment)
y <- data.frame(relationship)
fsize <- good$degree.g.
nodes <- data.frame(id = c(x$id), label = c(x$segment), color = c(x$color),
# title = paste("<p>", x$segment,"</p>"),
font.size = 30, value = fsize)
edges <- data.frame(from = c(y$from_id), to = c(y$to_id))
ccout <- visNetwork(nodes,edges, width = "100%",height = "1000px") %>%
visIgraphLayout() %>%
visOptions(highlightNearest = list(enabled = T, degree = 2, hover = T),
nodesIdSelection = list(enabled = TRUE, selected = gid))
visSave(ccout, file = "C://xampp/htdocs/SNA_sean/exam58/public/R/good.html",selfcontained = TRUE, background = "white")
# dbDisconnect(con)
on.exit(dbDisconnect(con))
# 測試db連接
lapply(dbListConnections(MySQL()), dbDisconnect)
library(RMySQL)
library('visNetwork')
library('igraph')
con <- dbConnect(MySQL(),
db = "test",
username = "root",
password = "12345",
host = "localhost")
dbSendQuery(con,"SET NAMES big5")
#找到目標id
sname <- '象山自然步道'
id_sql <- paste("SELECT id FROM site_data WHERE name = '",sname,"'", sep="")
sid <- dbGetQuery(con, id_sql)
#找到好的(red)裡面degree最大的
b_sql <- paste("SELECT s.id, s.segment, s.color, s.site_id, sd.name, `degree.g.`
FROM segment_data s, segment_degree d, site_data sd
WHERE (s.id = d.id AND sd.id = d.site_id)
AND sd.id = '",sid,"'
AND s.color = 'red'", sep="")
good <- dbGetQuery(con, b_sql)
DegreeMax <- max(good$degree.g.)
# print(DegreeMax)
# 找到maxdegree的名稱
g <- paste0("SELECT d.id, segment, color, `degree.g.`
FROM segment_data s, segment_degree d
WHERE (s.id = d.id) AND s.color = 'red'
AND s.site_id = '",sid,"'
AND `degree.g.` = '",DegreeMax,"'",sep="")
gname <- dbGetQuery(con, g)
#print(gname)
#找到與maxdegree連接的點
gid = gname$id
# =============以上是為了找到gid(degree最高的點)=============
#被連到最多的圖亮吧
seg <- paste("SELECT s.id, s.segment, s.color, d.name
FROM segment_data s, site_data d
WHERE (d.id = s.site_id)
AND d.id = '",sid,"'
AND s.color='red'",sep="")
seg_relat <- paste("SELECT r.from_id, s1.segment, s1.color, r.to_id, s2.segment, s2.color, r.site_id, d.name
FROM site_data d, segment_relationship r, segment_data s1, segment_data s2
WHERE (d.id = r.site_id AND r.from_id = s1.id AND r.to_id = s2.id)
AND d.id = '",sid,"'
AND (s1.color = 'red' AND s2.color = 'red')",sep="")
segment <- dbGetQuery(con, seg)
relationship <- dbGetQuery(con, seg_relat)
x <- data.frame(segment)
y <- data.frame(relationship)
fsize <- good$degree.g.
nodes <- data.frame(id = c(x$id), label = c(x$segment), color = c(x$color),
# title = paste("<p>", x$segment,"</p>"),
font.size = 30, value = fsize)
edges <- data.frame(from = c(y$from_id), to = c(y$to_id))
ccout <- visNetwork(nodes,edges, width = "100%",height = "1000px") %>%
visIgraphLayout() %>%
visOptions(highlightNearest = list(enabled = T, degree = 2, hover = T),
nodesIdSelection = list(enabled = TRUE, selected = gid))
visSave(ccout, file = "C://xampp/htdocs/SNA_sean/exam58/public/R/bad.html",selfcontained = TRUE, background = "white")
# dbDisconnect(con)
on.exit(dbDisconnect(con))
# 測試db連接
lapply(dbListConnections(MySQL()), dbDisconnect)
library(RMySQL)
library('visNetwork')
library('igraph')
con <- dbConnect(MySQL(),
db = "homestead",
username = "root",
password = "sightseeing",
host = "140.136.155.116")
dbSendQuery(con,"SET NAMES big5")
#找到目標id
sname <- '象山自然步道'
id_sql <- paste("SELECT id FROM site_data WHERE name = '",sname,"'", sep="")
sid <- dbGetQuery(con, id_sql)
#找到好的(red)裡面degree最大的
b_sql <- paste("SELECT s.id, s.segment, s.color, s.site_id, sd.name, `degree.g.`
FROM segment_data s, segment_degree d, site_data sd
WHERE (s.id = d.id AND sd.id = d.site_id)
AND sd.id = '",sid,"'
AND s.color = 'red'", sep="")
good <- dbGetQuery(con, b_sql)
DegreeMax <- max(good$degree.g.)
# print(DegreeMax)
# 找到maxdegree的名稱
g <- paste0("SELECT d.id, segment, color, `degree.g.`
FROM segment_data s, segment_degree d
WHERE (s.id = d.id) AND s.color = 'red'
AND s.site_id = '",sid,"'
AND `degree.g.` = '",DegreeMax,"'",sep="")
gname <- dbGetQuery(con, g)
#print(gname)
#找到與maxdegree連接的點
gid = gname$id
# =============以上是為了找到gid(degree最高的點)=============
#被連到最多的圖亮吧
seg <- paste("SELECT s.id, s.segment, s.color, d.name
FROM segment_data s, site_data d
WHERE (d.id = s.site_id)
AND d.id = '",sid,"'
AND s.color='red'",sep="")
seg_relat <- paste("SELECT r.from_id, s1.segment, s1.color, r.to_id, s2.segment, s2.color, r.site_id, d.name
FROM site_data d, segment_relationship r, segment_data s1, segment_data s2
WHERE (d.id = r.site_id AND r.from_id = s1.id AND r.to_id = s2.id)
AND d.id = '",sid,"'
AND (s1.color = 'red' AND s2.color = 'red')",sep="")
segment <- dbGetQuery(con, seg)
relationship <- dbGetQuery(con, seg_relat)
x <- data.frame(segment)
y <- data.frame(relationship)
fsize <- good$degree.g.
nodes <- data.frame(id = c(x$id), label = c(x$segment), color = c(x$color),
# title = paste("<p>", x$segment,"</p>"),
font.size = 30, value = fsize)
edges <- data.frame(from = c(y$from_id), to = c(y$to_id))
ccout <- visNetwork(nodes,edges, width = "100%",height = "1000px") %>%
visIgraphLayout() %>%
visOptions(highlightNearest = list(enabled = T, degree = 2, hover = T),
nodesIdSelection = list(enabled = TRUE, selected = gid))
visSave(ccout, file = "C://xampp/htdocs/SNA_sean/exam58/public/R/bad.html",selfcontained = TRUE, background = "white")
# dbDisconnect(con)
on.exit(dbDisconnect(con))
# 測試db連接
lapply(dbListConnections(MySQL()), dbDisconnect)
library('visNetwork')
library('igraph')
n<-read.csv("path_node.csv", header=T, as.is=T, sep=',', fileEncoding = 'utf-8')
sr<-read.csv("path_edge.csv", header=T, as.is=T, sep=',', fileEncoding = 'utf-8')
s_name <- n[1,1]
nodes <- data.frame(id = c(n$sid), group = c(n$level),
# label = c(n$near_site),
# title = paste("<p>", n$name,"</p>"),
font.size = 30)
edges <- data.frame(from = c(sr$from_id), to = c(sr$to_id),
value = c(sr$d_edge))
visNetwork(nodes, edges, width = "100%")%>%
visIgraphLayout() %>% #靜態
visOptions(highlightNearest = TRUE, selectedBy= "group",
nodesIdSelection = list(enabled = TRUE,  selected = s_name))
library('visNetwork')
library('igraph')
n<-read.csv("path_node.csv", header=T, as.is=T, sep=',', fileEncoding = 'utf-8')
sr<-read.csv("path_edge.csv", header=T, as.is=T, sep=',', fileEncoding = 'utf-8')
s_name <- n[1,1]
nodes <- data.frame(id = c(n$sid), group = c(n$level),
# label = c(n$near_site),
# title = paste("<p>", n$name,"</p>"),
font.size = 30)
edges <- data.frame(from = c(sr$from_id), to = c(sr$to_id),
value = c(sr$d_edge))
ccout <- visNetwork(nodes, edges, width = "100%")%>%
visIgraphLayout() %>% #靜態
visOptions(highlightNearest = TRUE, selectedBy= "group",
nodesIdSelection = list(enabled = TRUE,  selected = s_name))
visSave(ccout, file = "C://xampp/htdocs/SNA_sean/exam58/public/R/path.html",selfcontained = TRUE, background = "white")
# args <- commandArgs(TRUE)
args <- "台北 特色博物館 博物館"
#問題: 1.中文仍無法顯示在圖上
library(RMySQL)
library('visNetwork')
library('igraph')
# args <- commandArgs(TRUE)
args <- "台北 特色博物館 博物館"
city <- strsplit(args,"[[:space:]]")[[1]][1]
a <- strsplit(args,"[[:space:]]")[[1]][2]
b <- strsplit(args,"[[:space:]]")[[1]][3]
connect <- dbConnect(MySQL(),
db = "homestead",
username = "homestead",
password = "secret",
host = "localhost")
# #homestead(共11個表)
# dbListTables(connect)
# #site_data的表頭
# dbListFields(connect, "site_data")
#傳值到cityname
# cname <- '台北'
# tag1 <- '購物'
# tag2 <- '博物館'
cname <- city
tag1 <- a
tag2 <- b
sn_sql <- paste("select DISTINCT d.id,d.name, d.city_name, d.type, d.color
FROM site_relationship r, site_data d, site_attr a
WHERE (r.from_id = d.id AND r.to_id = a.id)
AND d.city_name ='", cname,"'
AND (a.tag ='", tag1,"' OR a.tag ='", tag2,"')",sep="")
sa_sql <- paste("select * from site_attr WHERE tag ='", tag1,"' OR tag ='", tag2,"'",sep="")
sr_sql <- paste("select r.from_id,d.name,r.to_id,a.tag
FROM site_relationship r, site_data d, site_attr a
WHERE (r.from_id = d.id AND r.to_id = a.id)
AND d.city_name ='", cname,"'
AND (a.tag ='", tag1,"' OR a.tag ='", tag2,"')",sep="")
dbSendQuery(connect,"SET NAMES big5")
sn <- dbGetQuery(connect , sn_sql)
sa <- dbGetQuery(connect ,sa_sql)
sr <- dbGetQuery(connect ,sr_sql)
nq <- nrow(sn)
x <- data.frame(sn)
# print(x$name)
y <- data.frame(sa)
n <- merge(x, y, by.x = c("id","type","name","color"),
by.y = c("id","type","tag","color"), all = TRUE)
# print(n)
nodes <- data.frame(id = c(n$id), group = c(n$type),
label = c(n$name), color = c(n$color),
title = paste("<p>", n$name,"</p>"),
shape = c(n$shape), font.size = 30)
edges <- data.frame(from = c(sr$from), to = c(sr$to))
ccout = visNetwork(nodes,edges, width = "100%",height = "500px") %>%
visIgraphLayout() %>% #靜態
visOptions(highlightNearest = TRUE,
nodesIdSelection = TRUE)
visSave(ccout, file = "C://xampp/htdocs/SNA_sean/exam58/quasarapp/src/statics/between_relationship.html",selfcontained = TRUE, background = "white")
# g <- graph.data.frame(edges, directed=FALSE, vertices=nodes)
# graph <- betweenness(g, v = V(g), directed = FALSE, weights = NA)
# visIgraph(g) %>%
#   visOptions(highlightNearest = TRUE)
# dbDisconnect(connect)
on.exit(dbDisconnect(connect))
# 測試db連接
# lapply(dbListConnections(MySQL()), dbDisconnect)
#問題: 1.中文仍無法顯示在圖上
library(RMySQL)
library('visNetwork')
library('igraph')
# args <- commandArgs(TRUE)
args <- "台北 特色博物館 博物館"
city <- strsplit(args,"[[:space:]]")[[1]][1]
a <- strsplit(args,"[[:space:]]")[[1]][2]
b <- strsplit(args,"[[:space:]]")[[1]][3]
connect <- dbConnect(MySQL(),
db = "homestead",
username = "homestead",
password = "secret",
host = "localhost")
# #homestead(共11個表)
# dbListTables(connect)
# #site_data的表頭
# dbListFields(connect, "site_data")
#傳值到cityname
# cname <- '台北'
# tag1 <- '購物'
# tag2 <- '博物館'
cname <- city
tag1 <- a
tag2 <- b
sn_sql <- paste("select DISTINCT d.id,d.name, d.city_name, d.type, d.color
FROM site_relationship r, site_data d, site_attr a
WHERE (r.from_id = d.id AND r.to_id = a.id)
AND d.city_name ='", cname,"'
AND (a.tag ='", tag1,"' OR a.tag ='", tag2,"')",sep="")
sa_sql <- paste("select * from site_attr WHERE tag ='", tag1,"' OR tag ='", tag2,"'",sep="")
sr_sql <- paste("select r.from_id,d.name,r.to_id,a.tag
FROM site_relationship r, site_data d, site_attr a
WHERE (r.from_id = d.id AND r.to_id = a.id)
AND d.city_name ='", cname,"'
AND (a.tag ='", tag1,"' OR a.tag ='", tag2,"')",sep="")
dbSendQuery(connect,"SET NAMES big5")
sn <- dbGetQuery(connect , sn_sql)
sa <- dbGetQuery(connect ,sa_sql)
sr <- dbGetQuery(connect ,sr_sql)
nq <- nrow(sn)
x <- data.frame(sn)
# print(x$name)
y <- data.frame(sa)
n <- merge(x, y, by.x = c("id","type","name","color"),
by.y = c("id","type","tag","color"), all = TRUE)
# print(n)
nodes <- data.frame(id = c(n$id), group = c(n$type),
label = c(n$name), color = c(n$color),
title = paste("<p>", n$name,"</p>"),
shape = c(n$shape), font.size = 30)
edges <- data.frame(from = c(sr$from), to = c(sr$to))
ccout = visNetwork(nodes,edges, width = "100%",height = "500px") %>%
visIgraphLayout() %>% #靜態
visOptions(highlightNearest = TRUE,
nodesIdSelection = TRUE)
visSave(ccout, file = "C://xampp/htdocs/SNA_sean/exam58/quasarapp/src/statics/between_relationship.html",selfcontained = TRUE, background = "white")
# g <- graph.data.frame(edges, directed=FALSE, vertices=nodes)
# graph <- betweenness(g, v = V(g), directed = FALSE, weights = NA)
# visIgraph(g) %>%
#   visOptions(highlightNearest = TRUE)
# dbDisconnect(connect)
on.exit(dbDisconnect(connect))
# 測試db連接
# lapply(dbListConnections(MySQL()), dbDisconnect)
